{"ast":null,"code":"import { deepExtend } from \"../../../../Utils/Utils\";\nexport class Shape {\n  constructor() {\n    this.options = {};\n    this.type = \"circle\";\n  }\n  get character() {\n    var _a;\n    return (_a = this.options[\"character\"]) !== null && _a !== void 0 ? _a : this.options[\"char\"];\n  }\n  set character(value) {\n    this.options[\"character\"] = value;\n    this.options[\"char\"] = value;\n  }\n  get custom() {\n    return this.options;\n  }\n  set custom(value) {\n    this.options = value;\n  }\n  get image() {\n    var _a;\n    return (_a = this.options[\"image\"]) !== null && _a !== void 0 ? _a : this.options[\"images\"];\n  }\n  set image(value) {\n    this.options[\"image\"] = value;\n    this.options[\"images\"] = value;\n  }\n  get images() {\n    return this.image;\n  }\n  set images(value) {\n    this.image = value;\n  }\n  get polygon() {\n    var _a;\n    return (_a = this.options[\"polygon\"]) !== null && _a !== void 0 ? _a : this.options[\"star\"];\n  }\n  set polygon(value) {\n    this.options[\"polygon\"] = value;\n    this.options[\"star\"] = value;\n  }\n  get stroke() {\n    return [];\n  }\n  set stroke(_value) {}\n  load(data) {\n    var _a, _b, _c;\n    if (!data) {\n      return;\n    }\n    const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n    if (options !== undefined) {\n      for (const shape in options) {\n        const item = options[shape];\n        if (item) {\n          this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n        }\n      }\n    }\n    this.loadShape(data.character, \"character\", \"char\", true);\n    this.loadShape(data.polygon, \"polygon\", \"star\", false);\n    this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, \"image\", \"images\", true);\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n  loadShape(item, mainKey, altKey, altOverride) {\n    var _a, _b;\n    if (!item) {\n      return;\n    }\n    const isArray = item instanceof Array;\n    const emptyValue = isArray ? [] : {},\n      mainDifferentValues = isArray !== this.options[mainKey] instanceof Array,\n      altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n    if (mainDifferentValues) {\n      this.options[mainKey] = emptyValue;\n    }\n    if (altDifferentValues && altOverride) {\n      this.options[altKey] = emptyValue;\n    }\n    this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n    if (!this.options[altKey] || altOverride) {\n      this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n    }\n  }\n}","map":{"version":3,"names":["deepExtend","Shape","constructor","options","type","character","_a","value","custom","image","images","polygon","stroke","_value","load","data","_b","_c","undefined","shape","item","loadShape","mainKey","altKey","altOverride","isArray","Array","emptyValue","mainDifferentValues","altDifferentValues"],"sources":["/Users/williamhart/Desktop/whportfolio/wh_portfolio/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js"],"sourcesContent":["import { deepExtend } from \"../../../../Utils/Utils\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[\"character\"]) !== null && _a !== void 0 ? _a : this.options[\"char\"]);\n    }\n    set character(value) {\n        this.options[\"character\"] = value;\n        this.options[\"char\"] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[\"image\"]) !== null && _a !== void 0 ? _a : this.options[\"images\"]);\n    }\n    set image(value) {\n        this.options[\"image\"] = value;\n        this.options[\"images\"] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[\"polygon\"]) !== null && _a !== void 0 ? _a : this.options[\"star\"]);\n    }\n    set polygon(value) {\n        this.options[\"polygon\"] = value;\n        this.options[\"star\"] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, \"character\", \"char\", true);\n        this.loadShape(data.polygon, \"polygon\", \"star\", false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, \"image\", \"images\", true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}