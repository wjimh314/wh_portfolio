{"ast":null,"code":"import { isSsr, safeMatchMedia } from \"../Utils/Utils\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nexport class Retina {\n  constructor(container) {\n    this.container = container;\n  }\n  init() {\n    const container = this.container,\n      options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n    const motionOptions = this.container.actualOptions.motion;\n    if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n      const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n      if (mediaQuery) {\n        this._handleMotionChange(mediaQuery);\n        const handleChange = () => {\n          this._handleMotionChange(mediaQuery);\n          container.refresh().catch(() => {});\n        };\n        if (mediaQuery.addEventListener !== undefined) {\n          mediaQuery.addEventListener(\"change\", handleChange);\n        } else if (mediaQuery.addListener !== undefined) {\n          mediaQuery.addListener(handleChange);\n        }\n      } else {\n        this.reduceFactor = 1;\n      }\n    } else {\n      this.reduceFactor = 1;\n    }\n    const ratio = this.pixelRatio;\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n    const particles = options.particles;\n    this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n    this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n  }\n  initParticle(particle) {\n    const options = particle.options,\n      ratio = this.pixelRatio,\n      moveDistance = options.move.distance,\n      props = particle.retina;\n    props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n    props.moveDrift = getRangeValue(options.move.drift) * ratio;\n    props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n    props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n    const maxDistance = props.maxDistance;\n    maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n    maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n    props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n  }\n  _handleMotionChange(mediaQuery) {\n    const options = this.container.actualOptions;\n    if (mediaQuery.matches) {\n      const motion = options.motion;\n      this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n    } else {\n      this.reduceFactor = 1;\n    }\n  }\n}","map":{"version":3,"names":["isSsr","safeMatchMedia","getRangeValue","Retina","constructor","container","init","options","actualOptions","pixelRatio","detectRetina","window","devicePixelRatio","motionOptions","motion","disable","reduce","value","mediaQuery","_handleMotionChange","handleChange","refresh","catch","addEventListener","undefined","addListener","reduceFactor","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","initParticle","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","matches","factor"],"sources":["/Users/williamhart/Desktop/whportfolio/wh_portfolio/node_modules/tsparticles-engine/esm/Core/Retina.js"],"sourcesContent":["import { isSsr, safeMatchMedia } from \"../Utils/Utils\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n            if (mediaQuery) {\n                this._handleMotionChange(mediaQuery);\n                const handleChange = () => {\n                    this._handleMotionChange(mediaQuery);\n                    container.refresh().catch(() => {\n                    });\n                };\n                if (mediaQuery.addEventListener !== undefined) {\n                    mediaQuery.addEventListener(\"change\", handleChange);\n                }\n                else if (mediaQuery.addListener !== undefined) {\n                    mediaQuery.addListener(handleChange);\n                }\n            }\n            else {\n                this.reduceFactor = 1;\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n    _handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}