{"ast":null,"code":"import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n  constructor() {\n    this.angle = new MoveAngle();\n    this.attract = new MoveAttract();\n    this.center = {\n      x: 50,\n      y: 50,\n      mode: \"percent\",\n      radius: 0\n    };\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new MovePath();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new MoveTrail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  get bounce() {\n    return this.collisions;\n  }\n  set bounce(value) {\n    this.collisions = value;\n  }\n  get collisions() {\n    return false;\n  }\n  set collisions(_) {}\n  get noise() {\n    return this.path;\n  }\n  set noise(value) {\n    this.path = value;\n  }\n  get outMode() {\n    return this.outModes.default;\n  }\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n  get out_mode() {\n    return this.outMode;\n  }\n  set out_mode(value) {\n    this.outMode = value;\n  }\n  load(data) {\n    var _a, _b, _c, _d;\n    if (!data) {\n      return;\n    }\n    this.angle.load(typeof data.angle === \"number\" ? {\n      value: data.angle\n    } : data.angle);\n    this.attract.load(data.attract);\n    this.center = deepExtend((_a = this.center) !== null && _a !== void 0 ? _a : {}, data.center);\n    if (data.decay !== undefined) {\n      this.decay = data.decay;\n    }\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    if (data.distance !== undefined) {\n      this.distance = typeof data.distance === \"number\" ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : Object.assign({}, data.distance);\n    }\n    if (data.drift !== undefined) {\n      this.drift = setRangeValue(data.drift);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.gravity.load(data.gravity);\n    const outModes = (_c = (_b = data.outModes) !== null && _b !== void 0 ? _b : data.outMode) !== null && _c !== void 0 ? _c : data.out_mode;\n    if (outModes !== undefined) {\n      if (typeof outModes === \"object\") {\n        this.outModes.load(outModes);\n      } else {\n        this.outModes.load({\n          default: outModes\n        });\n      }\n    }\n    this.path.load((_d = data.path) !== null && _d !== void 0 ? _d : data.noise);\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    this.spin.load(data.spin);\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n    this.trail.load(data.trail);\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}","map":{"version":3,"names":["MoveAngle","MoveAttract","MoveGravity","MovePath","MoveTrail","OutModes","Spin","deepExtend","setRangeValue","Move","constructor","angle","attract","center","x","y","mode","radius","decay","distance","direction","drift","enable","gravity","path","outModes","random","size","speed","spin","straight","trail","vibrate","warp","bounce","collisions","value","_","noise","outMode","default","out_mode","load","data","_a","_b","_c","_d","undefined","horizontal","vertical","Object","assign"],"sources":["/Users/williamhart/Desktop/whportfolio/wh_portfolio/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js"],"sourcesContent":["import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = {\n            x: 50,\n            y: 50,\n            mode: \"percent\",\n            radius: 0,\n        };\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center = deepExtend((_a = this.center) !== null && _a !== void 0 ? _a : {}, data.center);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_c = (_b = data.outModes) !== null && _b !== void 0 ? _b : data.outMode) !== null && _c !== void 0 ? _c : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_d = data.path) !== null && _d !== void 0 ? _d : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}