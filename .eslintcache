[{"/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/index.js":"1","/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/App.js":"2","/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/reportWebVitals.js":"3","/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/components/Navbar.js":"4","/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/components/Header.js":"5"},{"size":514,"mtime":1666868279539,"results":"6","hashOfConfig":"7"},{"size":303,"mtime":1666971713168,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1666866625788,"results":"9","hashOfConfig":"7"},{"size":1448,"mtime":1666888794688,"results":"10","hashOfConfig":"7"},{"size":513,"mtime":1666956517316,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fs9xgg",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/index.js",[],"/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/App.js",[],"/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/reportWebVitals.js",[],"/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/components/Navbar.js",["24","25","26","27","28","29"],"import React from 'react';\nimport logo from '../logo.png';\n//font awesome import\nimport { FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport{ faBars} from \"@fortawesome/free-solid-svg-icons\";\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n    <div className= \"container\">\n\n  <a className=\"navbar-brand \" href=\"#\"><img class= \"rounded-circle\" src={logo} alt=\"logo\"/></a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n   \n    <FontAwesomeIcon icon={faBars} style={{color:\"white\"}}git />\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">About Me</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Resume</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Portfolio</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Contact Me</a>\n      </li>\n  \n      \n    </ul>\n    </div>\n  </div>\n</nav>\n  )\n}\n\nexport default Navbar","/Users/williamhart/Desktop/whportfolio/wh_portfolio/src/components/Header.js",["30"],"import React from 'react'\nimport Typed from 'react-typed'\n\nconst Header = () => {\n  return (\n    <div className='header-wrapper'>\n        <div className='main-info'>\n            <h1>William J. Hart</h1>\n            <Typed className=\"typed-text\"\n            strings={[\"Javascripts\", \"React\",\"HTML5\",\"css\"]}\n            typedSpeed={70}\n            backSpeed={70}\n            loop\n            />\n            <a href=\"#\" className=\"btn-main-offer\">Contact me</a>\n        </div>\n    </div>\n  )\n}\n\nexport default Header",{"ruleId":"31","severity":1,"message":"32","line":11,"column":3,"nodeType":"33","endLine":11,"endColumn":41},{"ruleId":"31","severity":1,"message":"32","line":20,"column":9,"nodeType":"33","endLine":20,"endColumn":42},{"ruleId":"31","severity":1,"message":"32","line":23,"column":9,"nodeType":"33","endLine":23,"endColumn":42},{"ruleId":"31","severity":1,"message":"32","line":26,"column":9,"nodeType":"33","endLine":26,"endColumn":42},{"ruleId":"31","severity":1,"message":"32","line":29,"column":9,"nodeType":"33","endLine":29,"endColumn":42},{"ruleId":"31","severity":1,"message":"32","line":32,"column":9,"nodeType":"33","endLine":32,"endColumn":42},{"ruleId":"31","severity":1,"message":"32","line":15,"column":13,"nodeType":"33","endLine":15,"endColumn":52},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]